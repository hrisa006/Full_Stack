{"ast":null,"code":"export class ApiClient {\n  constructor(baseUrl) {\n    this.baseUrl = baseUrl;\n  }\n  async findAll(ctor) {\n    return this.fetchData(`${this.baseUrl}/${ctor.className.toLocaleLowerCase()}s`);\n  }\n  async findById(ctor, id) {\n    return this.fetchData(`${this.baseUrl}/${ctor.className.toLocaleLowerCase()}s/${id}`);\n  }\n  async create(ctor, entity) {\n    return this.fetchData(`${this.baseUrl}/${ctor.className.toLocaleLowerCase()}s`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(entity)\n    });\n  }\n  async update(ctor, entity) {\n    return this.fetchData(`${this.baseUrl}/${ctor.className.toLocaleLowerCase()}s`, {\n      method: 'PUT',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(entity)\n    });\n  }\n  async deleteById(ctor, id) {\n    return this.fetchData(`${this.baseUrl}/${ctor.className.toLocaleLowerCase()}s/${id}`, {\n      method: 'DELETE'\n    });\n  }\n  async fetchData(uri, options) {\n    const resp = await fetch(uri, options);\n    if (resp.status >= 400) {\n      throw new Error(await resp.text());\n    }\n    return resp.json();\n  }\n}","map":{"version":3,"names":["ApiClient","constructor","baseUrl","findAll","ctor","fetchData","className","toLocaleLowerCase","findById","id","create","entity","method","headers","body","JSON","stringify","update","deleteById","uri","options","resp","fetch","status","Error","text","json"],"sources":["C:/Users/hrist/OneDrive - MG Geo Milev - Pleven/Документи/Uni Thingies/Курс 2/Full-stack - S4/Works/FullStack_week07/src/api-client.ts"],"sourcesContent":["import { Identifiable, IdType } from \"./shared-types.js\";\r\n\r\ninterface EntityConstructor<V> {\r\n    new (...args:any): V;\r\n    className: string;\r\n}\r\n\r\nexport class ApiClient {\r\n    constructor(private baseUrl: string) { }\r\n    async findAll<V extends Identifiable<IdType>>(ctor: EntityConstructor<V>): Promise<V[]> {\r\n        return this.fetchData(`${this.baseUrl}/${ctor.className.toLocaleLowerCase()}s`);\r\n    }\r\n    async findById<V extends Identifiable<IdType>>(ctor: EntityConstructor<V>, id: IdType): Promise<V>  {\r\n        return this.fetchData(`${this.baseUrl}/${ctor.className.toLocaleLowerCase()}s/${id}`);\r\n    }\r\n    async create<V extends Identifiable<IdType>>(ctor: EntityConstructor<V>, entity: Omit<V, 'id'>): Promise<V>  {\r\n        return this.fetchData(`${this.baseUrl}/${ctor.className.toLocaleLowerCase()}s`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(entity)\r\n        });\r\n    }\r\n    async update<V extends Identifiable<IdType>>(ctor: EntityConstructor<V>, entity:V): Promise<V>  {\r\n        return this.fetchData(`${this.baseUrl}/${ctor.className.toLocaleLowerCase()}s`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(entity)\r\n        });\r\n    }\r\n    async deleteById<V extends Identifiable<IdType>>(ctor: EntityConstructor<V>, id: IdType): Promise<V>  {\r\n        return this.fetchData(`${this.baseUrl}/${ctor.className.toLocaleLowerCase()}s/${id}`, {\r\n            method: 'DELETE',\r\n        });\r\n    }\r\n\r\n    private async fetchData<D>(uri: string, options?: RequestInit): Promise<D> {\r\n        const resp = await fetch(uri, options);\r\n        if(resp.status >= 400) {\r\n            throw new Error(await resp.text());\r\n        }\r\n        return resp.json();\r\n    }\r\n}"],"mappings":"AAOA,OAAO,MAAMA,SAAS,CAAC;EACnBC,WAAWA,CAASC,OAAe,EAAE;IAAA,KAAjBA,OAAe,GAAfA,OAAe;EAAI;EACvC,MAAMC,OAAOA,CAAiCC,IAA0B,EAAgB;IACpF,OAAO,IAAI,CAACC,SAAS,CAAE,GAAE,IAAI,CAACH,OAAQ,IAAGE,IAAI,CAACE,SAAS,CAACC,iBAAiB,CAAC,CAAE,GAAE,CAAC;EACnF;EACA,MAAMC,QAAQA,CAAiCJ,IAA0B,EAAEK,EAAU,EAAe;IAChG,OAAO,IAAI,CAACJ,SAAS,CAAE,GAAE,IAAI,CAACH,OAAQ,IAAGE,IAAI,CAACE,SAAS,CAACC,iBAAiB,CAAC,CAAE,KAAIE,EAAG,EAAC,CAAC;EACzF;EACA,MAAMC,MAAMA,CAAiCN,IAA0B,EAAEO,MAAqB,EAAe;IACzG,OAAO,IAAI,CAACN,SAAS,CAAE,GAAE,IAAI,CAACH,OAAQ,IAAGE,IAAI,CAACE,SAAS,CAACC,iBAAiB,CAAC,CAAE,GAAE,EAAE;MAC5EK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,MAAM;IAC/B,CAAC,CAAC;EACN;EACA,MAAMM,MAAMA,CAAiCb,IAA0B,EAAEO,MAAQ,EAAe;IAC5F,OAAO,IAAI,CAACN,SAAS,CAAE,GAAE,IAAI,CAACH,OAAQ,IAAGE,IAAI,CAACE,SAAS,CAACC,iBAAiB,CAAC,CAAE,GAAE,EAAE;MAC5EK,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,MAAM;IAC/B,CAAC,CAAC;EACN;EACA,MAAMO,UAAUA,CAAiCd,IAA0B,EAAEK,EAAU,EAAe;IAClG,OAAO,IAAI,CAACJ,SAAS,CAAE,GAAE,IAAI,CAACH,OAAQ,IAAGE,IAAI,CAACE,SAAS,CAACC,iBAAiB,CAAC,CAAE,KAAIE,EAAG,EAAC,EAAE;MAClFG,MAAM,EAAE;IACZ,CAAC,CAAC;EACN;EAEA,MAAcP,SAASA,CAAIc,GAAW,EAAEC,OAAqB,EAAc;IACvE,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAEC,OAAO,CAAC;IACtC,IAAGC,IAAI,CAACE,MAAM,IAAI,GAAG,EAAE;MACnB,MAAM,IAAIC,KAAK,CAAC,MAAMH,IAAI,CAACI,IAAI,CAAC,CAAC,CAAC;IACtC;IACA,OAAOJ,IAAI,CAACK,IAAI,CAAC,CAAC;EACtB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}